use keccak256::keccak256;

global MAX_CIPHERTEXT_SIZE: u32 = 160;

fn main(ciphertext: pub BoundedVec<u8, MAX_CIPHERTEXT_SIZE>, ciphertext_hash_signed: pub [u8; 64]) {
    let signer_pub_key_x: [u8; 32] = [
        37, 113, 39, 59, 144, 143, 244, 152, 131, 70, 200, 5, 23, 75, 136, 169, 124, 162, 36, 142,
        102, 112, 193, 125, 185, 145, 41, 32, 15, 252, 77, 78,
    ];
    let signer_pub_key_y: [u8; 32] = [
        109, 64, 217, 202, 121, 155, 162, 214, 147, 84, 102, 59, 16, 215, 89, 104, 249, 85, 126, 77,
        109, 177, 17, 208, 115, 242, 164, 0, 20, 52, 223, 21,
    ];
    let record_hash: [u8; 32] = keccak256(ciphertext.storage(), ciphertext.len());
    let valid_signature = std::ecdsa_secp256k1::verify_signature(
        signer_pub_key_x,
        signer_pub_key_y,
        ciphertext_hash_signed,
        record_hash,
    );
    assert(valid_signature);
}

////////////////////////////////////////////////////////////////
//                         TEST FUNCTION                      //
///////////////////////////////////////////////////////////// //
#[test]
fn test_main() {
    let ciphertext: BoundedVec<u8, MAX_CIPHERTEXT_SIZE> = BoundedVec::from_array([
        183, 88, 164, 115, 134, 203, 44, 18, 221, 210, 55, 127, 190, 131, 64, 241, 34, 153, 23, 141,
        107, 116, 142, 58, 74, 204, 13, 188, 61, 110, 124, 234, 167, 144, 168, 82, 75, 18, 121, 77,
        218, 223, 84, 211, 237, 186, 195, 204, 48, 249, 47, 166, 28, 131, 112, 154, 53, 18, 133, 38,
        156, 158, 145, 97, 243, 88, 173, 170, 37, 143, 55, 213, 82, 209, 210, 69, 80, 205, 86, 21,
        174, 9, 168, 10, 184, 16, 78, 111, 207, 65, 98, 242, 130, 210, 26, 50, 75, 37, 58, 133, 225,
        32, 25, 64, 110, 66, 14, 216, 1, 63, 205, 238, 41, 151, 201, 130, 164, 96, 72, 17, 138, 196,
        56, 158, 253, 170, 57, 12, 182, 73, 50, 211, 96, 7, 209, 145, 8, 100, 167, 206, 91, 119,
        161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ]);
    let ciphertext_hash_signed: [u8; 64] = [
        143, 113, 130, 145, 73, 71, 224, 189, 155, 174, 197, 168, 87, 222, 21, 234, 27, 139, 224,
        198, 181, 208, 219, 119, 10, 4, 27, 184, 244, 190, 198, 192, 4, 185, 28, 74, 22, 29, 176,
        114, 113, 53, 54, 43, 38, 114, 168, 178, 169, 242, 4, 54, 235, 189, 233, 64, 209, 139, 255,
        134, 155, 231, 122, 80,
    ];

    main(ciphertext, ciphertext_hash_signed);
}
